const { verifyToken } = require('../config/jwtUtils');

// üîπ Middleware –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ JWT —Ç–æ–∫–µ–Ω–∞ (–¥–ª—è React API)
const jwtProtect = (req, res, next) => {
  const token = req.cookies?.token;

  if (!token) {
    return res.status(401).json({ message: '–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π –¥–æ—Å—Ç—É–ø' });
  }

  try {
    const decoded = verifyToken(token);
    req.user = decoded;
    next();
  } catch (err) {
    return res.status(403).json({ message: '–ù–µ–¥—ñ–π—Å–Ω–∏–π –∞–±–æ –ø—Ä–æ—Ç–µ—Ä–º—ñ–Ω–æ–≤–∞–Ω–∏–π —Ç–æ–∫–µ–Ω' });
  }
};

// üîπ Middleware –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ Passport-—Å–µ—Å—ñ—ó (–¥–ª—è SSR/PUG)
const protect = (req, res, next) => {
  if (req.isAuthenticated && req.isAuthenticated()) {
    return next();
  }

  // SSR route ‚Üí redirect
  if (req.accepts(['html', 'json']) === 'html') {
    return res.redirect('/users/auth/login');
  }

  // API route ‚Üí JSON
  return res.status(401).json({ message: '–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π –¥–æ—Å—Ç—É–ø' });
};

module.exports = {
  protect,       // –¥–ª—è SSR —á–µ—Ä–µ–∑ session
  jwtProtect,    // –¥–ª—è SPA —á–µ—Ä–µ–∑ JWT
};
